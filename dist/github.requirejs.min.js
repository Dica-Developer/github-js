define("util",[],function(){var e=function(){};e.prototype.extend=function(e,t,a){a=a||!1;for(var i in t)(a||"undefined"==typeof e[i])&&(e[i]=t[i]);return e},e.prototype.escapeRegExp=function(e){return e.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1")},e.prototype.toCamelCase=function(e,t){return t=t||!1,e=e.toLowerCase().replace(/(?:(^.)|(\s+.)|(-.))/g,function(e){return e.charAt(e.length-1).toUpperCase()}),t||(e=e.charAt(0).toLowerCase()+e.substr(1)),e},e.prototype.isTrue=function(e){return e===!0||"true"===e||"on"===e||"number"==typeof e&&e>0||"1"===e},e.prototype.isFalse=function(e){return e===!1||"false"===e||"off"===e||0===e||"0"===e};var t=["info","log","warn","error"];return t.forEach(function(t){e.prototype[t]=function(){return"undefined"!=typeof console&&"undefined"!=typeof console[t]?console[t]:null}}),new e}),define("HttpError",[],function(){var e={400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",420:"Enhance Your Calm",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",444:"No Response",449:"Retry With",499:"Client Closed Request",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"},t=function(t,a){this.message=t,this.code=a,this.defaultMessage=e[a]};return t.prototype.toString=function(){return this.message},t.prototype.toJSON=function(){return{code:this.code,status:this.defaultMessage,message:this.message}},t});var routes={defines:{constants:{name:"Github",description:"A Node.JS module, which provides an object oriented wrapper for the GitHub v3 API.",protocol:"https",host:"api.github.com",port:443,dateFormat:"YYYY-MM-DDTHH:MM:SSZ",requestFormat:"json"},"response-headers":["X-RateLimit-Limit","X-RateLimit-Remaining","X-Oauth-Scopes","Link","Location","Last-Modified","Etag","Status"],"request-headers":["If-Modified-Since","If-None-Match","Cookie","User-Agent"],params:{files:{type:"Json",required:!0,validation:"",invalidmsg:"",description:"Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'"},user:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},org:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},repo:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},branch:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},sha:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},description:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},id:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},gist_id:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},ref:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the name of the fully qualified reference (ie: heads/master). If it doesnâ€™t have at least one slash, it will be rejected."},number:{type:"Number",required:!0,validation:"^[0-9]+$",invalidmsg:"",description:""},name:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},direction:{type:"String",required:!1,validation:"^(asc|desc)$",invalidmsg:"asc or desc, default: desc.",description:""},since:{type:"Date",required:!1,validation:"",invalidmsg:"",description:"Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"},until:{type:"Date",required:!1,validation:"",invalidmsg:"",description:"Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"},state:{type:"String",required:!1,validation:"^(open|closed)$",invalidmsg:"open, closed, default: open",description:""},color:{type:"String",required:!0,validation:"",invalidmsg:"Required string - 6 character hex code, without a leading #.",description:"Required string - 6 character hex code, without a leading #."},permission:{type:"String",required:!1,validation:"^(pull|push|admin)$",invalidmsg:"",description:"`pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories."},base:{type:"String",required:!0,validation:"",invalidmsg:"",description:"Required string - The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo."},head:{type:"String",required:!0,validation:"",invalidmsg:"",description:"Required string - The branch (or git ref) where your changes are implemented."},commit_id:{type:"String",required:!0,validation:"",invalidmsg:"Required string - Sha of the commit to comment on.",description:"Required string - Sha of the commit to comment on."},line:{type:"Number",required:!0,validation:"",invalidmsg:"Required number - Line index in the diff to comment on.",description:"Required number - Line index in the diff to comment on."},path:{type:"String",required:!0,validation:"",invalidmsg:"Required string - Relative path of the file to comment on.",description:"Required string - Relative path of the file to comment on."},position:{type:"Number",required:!0,validation:"",invalidmsg:"Required number - Column index in the diff to comment on.",description:"Required number - Column index in the diff to comment on."},body:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},homepage:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},"private":{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - true to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false."},has_issues:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - true to enable issues for this repository, false to disable them. Default is true."},has_wiki:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - true to enable the wiki for this repository, false to disable it. Default is true."},has_downloads:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - true to enable downloads for this repository, false to disable them. Default is true."},collabuser:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},title:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},key:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},page:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"Page number of the results to fetch."},per_page:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"A custom page size up to 100. Default is 30."},scopes:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - A list of scopes that this authorization is in."},note:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - A note to remind you what the OAuth token is for."},note_url:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - A URL to remind you what app the OAuth token is for."},auto_init:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - true to create an initial commit with empty README. Default is false"},gitignore_template:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided."}}},gists:{"get-all":{url:"/gists",method:"GET",params:{$page:null,$per_page:null,$since:null}},"get-from-user":{url:"/users/:user/gists",method:"GET",params:{$user:null,$page:null,$per_page:null,$since:null}},create:{url:"/gists",method:"POST",params:{$description:null,"public":{type:"Boolean",required:!0,validation:"",invalidmsg:"",description:""},$files:null}},edit:{url:"/gists/:id",method:"PATCH",params:{$id:null,$description:null,$files:null}},"public":{url:"/gists/public",method:"GET",params:{$since:null}},starred:{url:"/gists/starred",method:"GET",params:{$since:null}},get:{url:"/gists/:id",method:"GET",params:{$id:null}},star:{url:"/gists/:id/star",method:"PUT",params:{$id:null}},"delete-star":{url:"/gists/:id/star",method:"DELETE",params:{$id:null}},"check-star":{url:"/gists/:id/star",method:"GET",params:{$id:null}},fork:{url:"/gists/:id/fork",method:"POST",params:{$id:null}},"delete":{url:"/gists/:id",method:"DELETE",params:{$id:null}},"get-comments":{url:"/gists/:gist_id/comments",method:"GET",params:{$gist_id:null}},"get-comment":{url:"/gists/:gist_id/comments/:id",method:"GET",params:{$gist_id:null,$id:null}},"create-comment":{url:"/gists/:gist_id/comments",method:"POST",params:{$gist_id:null,$body:null}},"edit-comment":{url:"/gists/:gist_id/comments/:id",method:"PATCH",params:{$gist_id:null,$id:null,$body:null}},"delete-comment":{url:"/gists/:gist_id/comments/:id",method:"DELETE",params:{$gist_id:null,$id:null}}},gitdata:{"get-blob":{url:"/repos/:user/:repo/git/blobs/:sha",method:"GET",params:{$user:null,$repo:null,$sha:null,$page:null,$per_page:null}},"create-blob":{url:"/repos/:user/:repo/git/blobs",method:"POST",params:{$user:null,$repo:null,content:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},encoding:{type:"String",required:!0,validation:"",invalidmsg:"",description:""}}},"get-commit":{url:"/repos/:user/:repo/git/commits/:sha",method:"GET",params:{$user:null,$repo:null,$sha:null}},"create-commit":{url:"/repos/:user/:repo/git/commits",method:"POST",params:{$user:null,$repo:null,message:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the commit message"},tree:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the SHA of the tree object this commit points to"},parents:{type:"Array",required:!0,validation:"",invalidmsg:"",description:"Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided."},author:{type:"Json",required:!1,validation:"",invalidmsg:"",description:""},committer:{type:"Json",required:!1,validation:"",invalidmsg:"",description:""}}},"get-reference":{url:"/repos/:user/:repo/git/refs/:ref",method:"GET",params:{$user:null,$repo:null,$ref:null}},"get-all-references":{url:"/repos/:user/:repo/git/refs",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"create-reference":{url:"/repos/:user/:repo/git/refs",method:"POST",params:{$user:null,$repo:null,$ref:null,$sha:null}},"update-reference":{url:"/repos/:user/:repo/git/refs/:ref",method:"PATCH",params:{$user:null,$repo:null,$ref:null,$sha:null,force:{type:"Boolean",required:!0,validation:"",invalidmsg:"",description:"Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure youâ€™re not overwriting work."}}},"delete-reference":{url:"/repos/:user/:repo/git/refs/:ref",method:"DELETE",params:{$user:null,$repo:null,$ref:null}},"get-tag":{url:"/repos/:user/:repo/git/tags/:sha",method:"GET",params:{$user:null,$repo:null,$sha:null}},"create-tag":{url:"/repos/:user/:repo/git/tags",method:"POST",params:{$user:null,$repo:null,tag:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the tag"},message:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the tag message"},object:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the SHA of the git object this is tagging"},type:{type:"String",required:!0,validation:"",invalidmsg:"",description:"String of the type of the object weâ€™re tagging. Normally this is a commit but it can also be a tree or a blob."},tagger:{type:"Json",required:!0,validation:"",invalidmsg:"",description:"JSON object that contains the following keys: `name` - String of the name of the author of the tag, `email` - String of the email of the author of the tag, `date` - Timestamp of when this object was tagged"}}},"get-tree":{url:"/repos/:user/:repo/git/trees/:sha",method:"GET",params:{$user:null,$repo:null,$sha:null,recursive:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:""}}},"create-tree":{url:"/repos/:user/:repo/git/trees",method:"POST",params:{$user:null,$repo:null,tree:{type:"Json",required:!0,validation:"",invalidmsg:"",description:"Array of Hash objects (of path, mode, type and sha) specifying a tree structure"},base_tree:{type:"String",required:!1,validation:"",invalidmsg:"",description:"String of the SHA1 of the tree you want to update with new data"}}}},issues:{"get-all":{url:"/issues",method:"GET",params:{filter:{type:"String",required:!1,validation:"^(all|assigned|created|mentioned|subscribed)$",invalidmsg:"",description:""},$state:null,labels:{type:"String",required:!1,validation:"",invalidmsg:"",description:"String list of comma separated Label names. Example: bug,ui,@high"},sort:{type:"String",required:!1,validation:"^(created|updated|comments)$",invalidmsg:"created, updated, comments, default: created.",description:""},$direction:null,$since:null,$page:null,$per_page:null}},"repo-issues":{url:"/repos/:user/:repo/issues",method:"GET",params:{$user:null,$repo:null,milestone:{type:"String",required:!1,validation:"^([0-9]+|none|\\*)$",invalidmsg:"",description:""},state:{type:"String",required:!1,validation:"^(open|closed)$",invalidmsg:"open, closed, default: open",description:"open or closed"},assignee:{type:"String",required:!1,validation:"",invalidmsg:"String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User.",description:"String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User."},mentioned:{type:"String",required:!1,validation:"",invalidmsg:"",description:"String User login."},labels:{type:"String",required:!1,validation:"",invalidmsg:"",description:"String list of comma separated Label names. Example: bug,ui,@high"},sort:{type:"String",required:!1,validation:"^(created|updated|comments)$",invalidmsg:"created, updated, comments, default: created.",description:""},$direction:null,$since:null,$page:null,$per_page:null}},"get-repo-issue":{url:"/repos/:user/:repo/issues/:number",method:"GET",params:{$user:null,$repo:null,$number:null}},create:{url:"/repos/:user/:repo/issues",method:"POST",params:{$user:null,$repo:null,title:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},body:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},assignee:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Login for the user that this issue should be assigned to."},milestone:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"Optional number - Milestone to associate this issue with."},labels:{type:"Json",required:!0,validation:"",invalidmsg:"",description:"Optional array of strings - Labels to associate with this issue."}}},edit:{url:"/repos/:user/:repo/issues/:number",method:"PATCH",params:{$user:null,$repo:null,$number:null,title:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},body:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},assignee:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Login for the user that this issue should be assigned to."},milestone:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"Optional number - Milestone to associate this issue with."},labels:{type:"Json",required:!1,validation:"",invalidmsg:"",description:"Optional array of strings - Labels to associate with this issue."},state:{type:"String",required:!1,validation:"^(open|closed)$",invalidmsg:"open, closed, default: open",description:"open or closed"}}},"repo-comments":{url:"/repos/:user/:repo/issues/comments",method:"GET",params:{$user:null,$repo:null,sort:{type:"String",required:!1,validation:"^(created|updated)$",invalidmsg:"created, updated, default: created.",description:""},$direction:null,$since:null,$page:null,$per_page:null}},"get-comments":{url:"/repos/:user/:repo/issues/:number/comments",method:"GET",params:{$user:null,$repo:null,$number:null,$page:null,$per_page:null}},"get-comment":{url:"/repos/:user/:repo/issues/comments/:id",method:"GET",params:{$user:null,$repo:null,$id:null}},"create-comment":{url:"/repos/:user/:repo/issues/:number/comments",method:"POST",params:{$user:null,$repo:null,$number:null,body:{type:"String",required:!0,validation:"",invalidmsg:"",description:""}}},"edit-comment":{url:"/repos/:user/:repo/issues/comments/:id",method:"PATCH",params:{$user:null,$repo:null,$id:null,body:{type:"String",required:!0,validation:"",invalidmsg:"",description:""}}},"delete-comment":{url:"/repos/:user/:repo/issues/comments/:id",method:"DELETE",params:{$user:null,$repo:null,$id:null}},"get-events":{url:"/repos/:user/:repo/issues/:number/events",method:"GET",params:{$user:null,$repo:null,$number:null,$page:null,$per_page:null}},"get-repo-events":{url:"/repos/:user/:repo/issues/events",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-event":{url:"/repos/:user/:repo/issues/events/:id",method:"GET",params:{$user:null,$repo:null,$id:null}},"get-labels":{url:"/repos/:user/:repo/labels",method:"GET",params:{$user:null,$repo:null}},"get-label":{url:"/repos/:user/:repo/labels/:name",method:"GET",params:{$user:null,$repo:null,$name:null}},"create-label":{url:"/repos/:user/:repo/labels",method:"POST",params:{$user:null,$repo:null,$name:null,$color:null}},"update-label":{url:"/repos/:user/:repo/labels/:name",method:"POST",params:{$user:null,$repo:null,$name:null,$color:null}},"delete-label":{url:"/repos/:user/:repo/labels/:name",method:"DELETE",params:{$user:null,$repo:null,$name:null}},"get-all-milestones":{url:"/repos/:user/:repo/milestones",method:"GET",params:{$user:null,$repo:null,$state:null,sort:{type:"String",required:!1,validation:"^(due_date|completeness)$",invalidmsg:"due_date, completeness, default: due_date",description:"due_date, completeness, default: due_date"},$page:null,$per_page:null}},"get-milestone":{url:"/repos/:user/:repo/milestones/:number",method:"GET",params:{$user:null,$repo:null,$number:null}},"create-milestone":{url:"/repos/:user/:repo/milestones",method:"POST",params:{$user:null,$repo:null,title:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},$state:null,$description:null,due_on:{type:"Date",required:!1,validation:"",invalidmsg:"Optional string - ISO 8601 time.",description:"Optional string - ISO 8601 time."}}},"update-milestone":{url:"/repos/:user/:repo/milestones/:number",method:"PATCH",params:{$user:null,$repo:null,$number:null,title:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},$state:null,$description:null,due_on:{type:"Date",required:!1,validation:"",invalidmsg:"Optional string - ISO 8601 time.",description:"Optional string - ISO 8601 time."}}},"delete-milestone":{url:"/repos/:user/:repo/milestones/:number",method:"DELETE",params:{$user:null,$repo:null,$number:null}}},authorization:{"get-all":{url:"/authorizations",method:"GET",params:{$page:null,$per_page:null}},get:{url:"/authorizations/:id",method:"GET",params:{$id:null}},create:{url:"/authorizations",method:"POST",params:{$scopes:null,$note:null,$note_url:null}},update:{url:"/authorizations/:id",method:"PATCH",params:{$id:null,$scopes:null,add_scopes:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - A list of scopes to add to this authorization."},remove_scopes:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - A list of scopes to remove from this authorization."},$note:null,$note_url:null}},"delete":{url:"/authorizations/:id",method:"DELETE",params:{$id:null}}},orgs:{"get-from-user":{url:"/users/:user/orgs",method:"GET",params:{$user:null,$page:null,$per_page:null}},get:{url:"/orgs/:org",method:"GET",params:{$org:null,$page:null,$per_page:null}},update:{url:"/orgs/:org",method:"PATCH",params:{$org:null,billing_email:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Billing email address. This address is not publicized."},company:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},email:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Publicly visible email address."},location:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},name:{type:"String",required:!1,validation:"",invalidmsg:"",description:""}}},"get-members":{url:"/orgs/:org/members",method:"GET",params:{$org:null,$page:null,$per_page:null}},"get-member":{url:"/orgs/:org/members/:user",method:"GET",params:{$org:null,$user:null}},"remove-member":{url:"/orgs/:org/members/:user",method:"DELETE",params:{$org:null,$user:null}},"get-public-members":{url:"/orgs/:org/public_members",method:"GET",params:{$org:null}},"get-public-member":{url:"/orgs/:org/public_members/:user",method:"GET",params:{$org:null,$user:null}},"publicize-membership":{url:"/orgs/:org/public_members/:user",method:"PUT",params:{$org:null,$user:null}},"conceal-membership":{url:"/orgs/:org/public_members/:user",method:"DELETE",params:{$org:null,$user:null}},"get-teams":{url:"/orgs/:org/teams",method:"GET",params:{$org:null}},"get-team":{url:"/teams/:id",method:"GET",params:{$id:null}},"create-team":{url:"/orgs/:org/teams",method:"POST",params:{$org:null,$name:null,repo_names:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array of strings"},$permission:null}},"update-team":{url:"/teams/:id",method:"PATCH",params:{$id:null,$name:null,$permission:null}},"delete-team":{url:"/teams/:id",method:"DELETE",params:{$id:null}},"get-team-members":{url:"/teams/:id/members",method:"GET",params:{$id:null,$page:null,$per_page:null}},"get-team-member":{url:"/teams/:id/members/:user",method:"GET",params:{$id:null,$user:null}},"add-team-member":{url:"/teams/:id/members/:user",method:"PUT",params:{$id:null,$user:null}},"delete-team-member":{url:"/teams/:id/members/:user",method:"DELETE",params:{$id:null,$user:null}},"get-team-repos":{url:"/teams/:id/repos",method:"GET",params:{$id:null,$page:null,$per_page:null}},"get-team-repo":{url:"/teams/:id/repos/:user/:repo",method:"GET",params:{$id:null,$user:null,$repo:null}},"add-team-repo":{url:"/teams/:id/repos/:user/:repo",method:"PUT",params:{$id:null,$user:null,$repo:null}},"delete-team-repo":{url:"/teams/:id/repos/:user/:repo",method:"DELETE",params:{$id:null,$user:null,$repo:null}}},statuses:{get:{url:"/repos/:user/:repo/statuses/:sha",method:"GET",params:{$user:null,$repo:null,$sha:null}},create:{url:"/repos/:user/:repo/statuses/:sha",method:"POST",params:{$user:null,$repo:null,$sha:null,state:{type:"String",required:!0,validation:"^(pending|success|error|failure)$",invalidmsg:"",description:"State of the status - can be one of pending, success, error, or failure."},target_url:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the â€˜sourceâ€™ of the Status."},description:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Short description of the status."}}}},"pull-requests":{"get-all":{url:"/repos/:user/:repo/pulls",method:"GET",params:{$user:null,$repo:null,$state:null,$page:null,$per_page:null}},get:{url:"/repos/:user/:repo/pulls/:number",method:"GET",params:{$user:null,$repo:null,$number:null}},create:{url:"/repos/:user/:repo/pulls",method:"POST",params:{$user:null,$repo:null,title:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},body:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},$base:null,$head:null}},"create-from-issue":{url:"/repos/:user/:repo/pulls",method:"POST",params:{$user:null,$repo:null,issue:{type:"Number",required:!0,validation:"^[0-9]+$",invalidmsg:"",description:""},$base:null,$head:null}},update:{url:"/repos/:user/:repo/pulls/:number",method:"PATCH",params:{$user:null,$repo:null,$number:null,$state:null,title:{type:"String",required:!0,validation:"",invalidmsg:"",description:""},body:{type:"String",required:!1,validation:"",invalidmsg:"",description:""}}},"get-commits":{url:"/repos/:user/:repo/pulls/:number/commits",method:"GET",params:{$user:null,$repo:null,$number:null,$page:null,$per_page:null}},"get-files":{url:"/repos/:user/:repo/pulls/:number/files",method:"GET",params:{$user:null,$repo:null,$number:null,$page:null,$per_page:null}},"get-merged":{url:"/repos/:user/:repo/pulls/:number/merge",method:"GET",params:{$user:null,$repo:null,$number:null,$page:null,$per_page:null}},merge:{url:"/repos/:user/:repo/pulls/:number/merge",method:"PUT",params:{$user:null,$repo:null,$number:null,commit_message:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - The message that will be used for the merge commit"}}},"get-comments":{url:"/repos/:user/:repo/pulls/:number/comments",method:"GET",params:{$user:null,$repo:null,$number:null,$page:null,$per_page:null}},"get-comment":{url:"/repos/:user/:repo/pulls/comments/:number",method:"GET",params:{$user:null,$repo:null,$number:null}},"create-comment":{url:"/repos/:user/:repo/pulls/:number/comments",method:"POST",params:{$user:null,$repo:null,$number:null,$body:null,$commit_id:null,$path:null,$position:null}},"create-comment-reply":{url:"/repos/:user/:repo/pulls/:number/comments",method:"POST",params:{$user:null,$repo:null,$number:null,$body:null,in_reply_to:{type:"Number",required:!0,validation:"",invalidmsg:"",description:""}}},"update-comment":{url:"/repos/:user/:repo/pulls/comments/:number",method:"PATCH",params:{$user:null,$repo:null,$number:null,$body:null}},"delete-comment":{url:"/repos/:user/:repo/pulls/comments/:number",method:"DELETE",params:{$user:null,$repo:null,$number:null}}},repos:{"get-all":{url:"/user/repos",method:"GET",params:{type:{type:"String",required:!1,validation:"^(all|owner|public|private|member)$",invalidmsg:"Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`.",description:"Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`."},sort:{type:"String",required:!1,validation:"^(created|updated|pushed|full_name)$",invalidmsg:"Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`.",description:"Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`."},$direction:null,$page:null,$per_page:null}},"get-from-user":{url:"/users/:user/repos",method:"GET",params:{$user:null,type:{type:"String",required:!1,validation:"^(all|owner|member)$",invalidmsg:"Possible values: `all`, `owner`, `member`. Default: `public`.",description:"Possible values: `all`, `owner`, `member`. Default: `public`."},sort:{type:"String",required:!1,validation:"^(created|updated|pushed|full_name)$",invalidmsg:"Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`.",description:"Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`."},$direction:null,$page:null,$per_page:null}},"get-from-org":{url:"/orgs/:org/repos",method:"GET",params:{$org:null,type:{type:"String",required:!1,validation:"^(all|public|member)$",invalidmsg:"Possible values: `all`, `public`, `member`. Default: `all`.",description:"Possible values: `all`, `public`, `member`. Default: `all`."},$page:null,$per_page:null}},create:{url:"/user/repos",method:"POST",params:{$name:null,$description:null,$homepage:null,$private:null,$has_issues:null,$has_wiki:null,$has_downloads:null,$auto_init:null,$gitignore_template:null}},"create-from-org":{url:"/orgs/:org/repos",method:"POST",params:{$org:null,$name:null,$description:null,$homepage:null,$private:null,$has_issues:null,$has_wiki:null,$has_downloads:null,$auto_init:null,$gitignore_template:null,team_id:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"Optional number - The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization."}}},get:{url:"/repos/:user/:repo",method:"GET",params:{$user:null,$repo:null}},update:{url:"/repos/:user/:repo",method:"PATCH",params:{$user:null,$repo:null,$name:null,$description:null,$homepage:null,$private:null,$has_issues:null,$has_wiki:null,$has_downloads:null}},"delete":{url:"/repos/:user/:repo",method:"DELETE",params:{$user:null,$repo:null}},merge:{url:"/repos/:user/:repo/merges",method:"POST",params:{$user:null,$repo:null,$base:null,$head:null,commit_message:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Commit message to use for the merge commit. If omitted, a default message will be used."}}},"get-contributors":{url:"/repos/:user/:repo/contributors",method:"GET",params:{$user:null,$repo:null,anon:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional flag. Set to 1 or true to include anonymous contributors in results."},$page:null,$per_page:null}},"get-languages":{url:"/repos/:user/:repo/languages",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-teams":{url:"/repos/:user/:repo/teams",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-tags":{url:"/repos/:user/:repo/tags",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-branches":{url:"/repos/:user/:repo/branches",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-branch":{url:"/repos/:user/:repo/branches/:branch",method:"GET",params:{$user:null,$repo:null,$branch:null,$page:null,$per_page:null}},"get-collaborators":{url:"/repos/:user/:repo/collaborators",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-collaborator":{url:"/repos/:user/:repo/collaborators/:collabuser",method:"GET",params:{$user:null,$repo:null,$collabuser:null}},"add-collaborator":{url:"/repos/:user/:repo/collaborators/:collabuser",method:"PUT",params:{$user:null,$repo:null,$collabuser:null}},"remove-collaborator":{url:"/repos/:user/:repo/collaborators/:collabuser",method:"DELETE",params:{$user:null,$repo:null,$collabuser:null}},"get-commits":{url:"/repos/:user/:repo/commits",method:"GET",params:{$user:null,$repo:null,sha:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Sha or branch to start listing commits from."},path:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Only commits containing this file path will be returned."},author:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Only commits commited by this author."},$page:null,$per_page:null,$since:{type:"Date",required:!1,validation:"",invalidmsg:"Optional string - ISO 8601 time.",description:"Optional string - ISO 8601 time."},$until:{type:"Date",required:!1,validation:"",invalidmsg:"Optional string - ISO 8601 time.",description:"Optional string - ISO 8601 time."}}},"get-commit":{url:"/repos/:user/:repo/commits/:sha",method:"GET",params:{$user:null,$repo:null,$sha:null}},"get-all-commit-comments":{url:"/repos/:user/:repo/comments",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-commit-comments":{url:"/repos/:user/:repo/commits/:sha/comments",method:"GET",params:{$user:null,$repo:null,$sha:null,$page:null,$per_page:null}},"create-commit-comment":{url:"/repos/:user/:repo/commits/:sha/comments",method:"POST",params:{$user:null,$repo:null,$sha:null,$body:null,$commit_id:null,path:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional string - Relative path of the file to comment on."},position:{type:"Number",required:!1,validation:"",invalidmsg:"",description:"Optional number - Line index in the diff to comment on."},line:{type:"Number",required:!1,validation:"",invalidmsg:"",description:"Optional number - Line number in the file to comment on. Defaults to 1."}}},"get-commit-comment":{url:"/repos/:user/:repo/comments/:id",method:"GET",params:{$user:null,$repo:null,$id:null}},"update-commit-comment":{url:"/repos/:user/:repo/comments/:id",method:"PATCH",params:{$user:null,$repo:null,$id:null,$body:null}},"compare-commits":{url:"/repos/:user/:repo/compare/:base...:head",method:"GET",params:{$user:null,$repo:null,$base:null,$head:null}},"delete-commit-comment":{url:"/repos/:user/:repo/comments/:id",method:"DELETE",params:{$user:null,$repo:null,$id:null}},"get-readme":{url:"/repos/:user/:repo/readme",method:"GET",params:{$user:null,$repo:null,ref:{type:"String",required:!1,validation:"",invalidmsg:"",description:"The String name of the Commit/Branch/Tag. Defaults to master."}}},"get-content":{url:"/repos/:user/:repo/contents/:path",method:"GET",params:{$user:null,$repo:null,path:{type:"String",required:!1,validation:"",invalidmsg:"",description:"The content path."},ref:{type:"String",required:!1,validation:"",invalidmsg:"",description:"The String name of the Commit/Branch/Tag. Defaults to master."}}},"get-archive-link":{url:"/repos/:user/:repo/:archive_format/:ref",method:"GET",params:{$user:null,$repo:null,$ref:null,archive_format:{type:"String",required:!0,validation:"^(tarball|zipball)$",invalidmsg:"Either tarball or zipball",description:"Either tarball or zipball"}}},"get-downloads":{url:"/repos/:user/:repo/downloads",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-download":{url:"/repos/:user/:repo/downloads/:id",method:"GET",params:{$user:null,$repo:null,$id:null}},"delete-download":{url:"/repos/:user/:repo/downloads/:id",method:"DELETE",params:{$user:null,$repo:null,$id:null}},"get-forks":{url:"/repos/:user/:repo/forks",method:"GET",params:{$user:null,$repo:null,sort:{type:"String",required:!1,validation:"^(newest|oldest|watchers)$",invalidmsg:"Possible values: `newest`, `oldest`, `watchers`, default: `newest`.",description:"Possible values: `newest`, `oldest`, `watchers`, default: `newest`."},$page:null,$per_page:null}},fork:{url:"/repos/:user/:repo/forks",method:"POST",params:{$user:null,$repo:null,org:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Optional String - Organization login. The repository will be forked into this organization."}}},"get-keys":{url:"/repos/:user/:repo/keys",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-key":{url:"/repos/:user/:repo/keys/:id",method:"GET",params:{$user:null,$repo:null,$id:null}},"create-key":{url:"/repos/:user/:repo/keys",method:"POST",params:{$user:null,$repo:null,$title:null,$key:null}},"update-key":{url:"/repos/:user/:repo/keys/:id",method:"PUT",params:{$user:null,$repo:null,$id:null,$title:null,$key:null}},"delete-key":{url:"/repos/:user/:repo/keys/:id",method:"DELETE",params:{$user:null,$repo:null,$id:null}},"get-stargazers":{url:"/repos/:user/:repo/stargazers",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-starred":{url:"/user/starred",method:"GET",params:{$page:null,$per_page:null}},"get-starred-from-user":{url:"/users/:user/starred",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-starring":{url:"/user/starred/:user/:repo",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},star:{url:"/user/starred/:user/:repo",method:"PUT",params:{$user:null,$repo:null}},"un-star":{url:"/user/starred/:user/:repo",method:"DELETE",params:{$user:null,$repo:null}},"get-watchers":{url:"/repos/:user/:repo/watchers",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-watched":{url:"/user/watched",method:"GET",params:{$page:null,$per_page:null}},"get-watched-from-user":{url:"/users/:user/watched",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-watching":{url:"/user/watched/:user/:repo",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},watch:{url:"/user/watched/:user/:repo",method:"PUT",params:{$user:null,$repo:null}},"un-watch":{url:"/user/watched/:user/:repo",method:"DELETE",params:{$user:null,$repo:null}},"get-hooks":{url:"/repos/:user/:repo/hooks",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-hook":{url:"/repos/:user/:repo/hooks/:id",method:"GET",params:{$user:null,$repo:null,$id:null}},"create-hook":{url:"/repos/:user/:repo/hooks",method:"POST",params:{$user:null,$repo:null,$name:null,config:{type:"Json",required:!0,validation:"",invalidmsg:"",description:"Required hash - A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically."},events:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - Determines what events the hook is triggered for. Default: `['push']`."},active:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - Determines whether the hook is actually triggered on pushes."}}},"update-hook":{url:"/repos/:user/:repo/hooks/:id",method:"PATCH",params:{$user:null,$repo:null,$id:null,$name:null,config:{type:"Json",required:!0,validation:"",invalidmsg:"",description:"Required hash - A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically."},events:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - Determines what events the hook is triggered for. This replaces the entire array of events. Default: `['push']`."},add_events:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - Determines a list of events to be added to the list of events that the Hook triggers for."},remove_events:{type:"Array",required:!1,validation:"",invalidmsg:"",description:"Optional array - Determines a list of events to be removed from the list of events that the Hook triggers for."},active:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:"Optional boolean - Determines whether the hook is actually triggered on pushes."}}},"test-hook":{url:"/repos/:user/:repo/hooks/:id/test",method:"POST",params:{$user:null,$repo:null,$id:null}},"delete-hook":{url:"/repos/:user/:repo/hooks/:id",method:"DELETE",params:{$user:null,$repo:null,$id:null}}},user:{"get-from":{url:"/users/:user",method:"GET",params:{$user:null}},get:{url:"/user",method:"GET",params:{}},update:{url:"/user",method:"PATCH",params:{name:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},email:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},blog:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},company:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},location:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},hireable:{type:"Boolean",required:!1,validation:"",invalidmsg:"",description:""},bio:{type:"String",required:!1,validation:"",invalidmsg:"",description:""}}},"get-orgs":{url:"/user/orgs",method:"GET",params:{$page:null,$per_page:null}},"get-emails":{url:"/user/emails",method:"GET",params:{$page:null,$per_page:null}},"add-emails":{url:"/user/emails",method:"POST",params:{}},"delete-emails":{url:"/user/emails",method:"DELETE",params:{}},"get-followers":{url:"/users/:user/followers",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-following-from-user":{url:"/users/:user/following",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-following":{url:"/user/following",method:"GET",params:{$page:null,$per_page:null}},"get-follow-user":{url:"/user/following/:user",method:"GET",params:{$user:null,$page:null,$per_page:null}},"follow-user":{url:"/user/following/:user",method:"PUT",params:{$user:null}},"un-follow-user":{url:"/user/following/:user",method:"DELETE",params:{$user:null}},"get-keys":{url:"/user/keys",method:"GET",params:{$page:null,$per_page:null}},"get-key":{url:"/user/keys/:id",method:"GET",params:{$id:null}},"create-key":{url:"/user/keys",method:"POST",params:{$title:null,$key:null}},"update-key":{url:"/user/keys/:id",method:"PATCH",params:{$id:null,$title:null,$key:null}},"delete-key":{url:"/user/keys/:id",method:"DELETE",params:{$id:null}}},events:{get:{url:"/events",method:"GET",params:{$page:null,$per_page:null}},"get-from-repo":{url:"/repos/:user/:repo/events",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-from-repo-issues":{url:"/repos/:user/:repo/issues/events",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-from-repo-network":{url:"/networks/:user/:repo/events",method:"GET",params:{$user:null,$repo:null,$page:null,$per_page:null}},"get-from-org":{url:"/orgs/:org/events",method:"GET",params:{$org:null,$page:null,$per_page:null}},"get-received":{url:"/users/:user/received_events",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-received-public":{url:"/users/:user/received_events/public",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-from-user":{url:"/users/:user/events",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-from-user-public":{url:"/users/:user/events/public",method:"GET",params:{$user:null,$page:null,$per_page:null}},"get-from-user-org":{url:"/users/:user/events/orgs/:org",method:"GET",params:{$user:null,$org:null,$page:null,$per_page:null}}},search:{issues:{url:"/legacy/issues/search/:user/:repo/:state/:keyword",method:"GET",params:{$user:null,$repo:null,state:{type:"String",required:!0,validation:"^(open|closed)$",invalidmsg:"open, closed, default: open",description:"open or closed"},keyword:{type:"String",required:!0,validation:"",invalidmsg:"",description:"Search term"}}},repos:{url:"/legacy/repos/search/:keyword",method:"GET",params:{keyword:{type:"String",required:!0,validation:"",invalidmsg:"",description:"Search term"},language:{type:"String",required:!1,validation:"",invalidmsg:"",description:"Filter results by language, see https://github.com/languages"},start_page:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"Page number to fetch"}}},users:{url:"/legacy/user/search/:keyword",method:"GET",params:{keyword:{type:"String",required:!0,validation:"",invalidmsg:"",description:"Keyword search parameters"},start_page:{type:"Number",required:!1,validation:"^[0-9]+$",invalidmsg:"",description:"Page number to fetch"}}},code:{url:"/search/code",method:"GET",params:{q:{type:"String",required:!0,validation:"",invalidmsg:"",description:"Search query"},sort:{type:"String",required:!1,validation:"",invalidmsg:"",description:""},order:{type:"String",required:!1,validation:"",invalidmsg:"",description:""}}}},markdown:{render:{url:"/markdown",method:"POST",params:{text:{type:"String",required:!0,validation:"",invalidmsg:"",description:"The Markdown text to render"},mode:{type:"String",required:!1,validation:"^(markdown|gfm)$",invalidmsg:"",description:"The rendering mode, `markdown` to render a document as plain Markdown, just like README files are rendered. `gfm` to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly."},context:{type:"String",required:!1,validation:"",invalidmsg:"",description:"The repository context, only taken into account when rendering as `gfm`"}}}}};
"undefined"!=typeof define&&"function"==typeof define?define("api/routes",[],function(){return routes}):module.exports=routes,define("api/gists",[],function(){var e={gists:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.getAll=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.getFromUser=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.create=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.edit=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.public=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.starred=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.get=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.star=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.deleteStar=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.checkStar=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.fork=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.delete=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.getComments=t(h);var g=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.getComment=t(g);var f=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.createComment=t(f);var v=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gists.editComment=t(v);var x=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.gists.deleteComment=t(x),e}),define("api/gitdata",[],function(){var e={gitdata:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.getBlob=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.createBlob=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.getCommit=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.createCommit=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.getReference=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.getAllReferences=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.createReference=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.updateReference=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.deleteReference=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.getTag=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.createTag=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.gitdata.getTree=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.gitdata.createTree=t(h),e}),define("api/issues",[],function(){var e={issues:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getAll=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.repoIssues=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getRepoIssue=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.create=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.edit=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.repoComments=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getComments=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getComment=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.createComment=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.editComment=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.deleteComment=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getEvents=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getRepoEvents=t(h);var g=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getEvent=t(g);var f=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getLabels=t(f);var v=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getLabel=t(v);var x=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.createLabel=t(x);var $=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.updateLabel=t($);var y=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.deleteLabel=t(y);var E=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getAllMilestones=t(E);var b=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.getMilestone=t(b);var k=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.createMilestone=t(k);var T=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.issues.updateMilestone=t(T);var S=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.issues.deleteMilestone=t(S),e}),define("api/authorization",[],function(){var e={authorization:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.authorization.getAll=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.authorization.get=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.authorization.create=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.authorization.update=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.authorization.delete=t(o),e}),define("api/orgs",[],function(){var e={orgs:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getFromUser=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.get=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.update=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getMembers=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getMember=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.removeMember=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getPublicMembers=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getPublicMember=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.publicizeMembership=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.concealMembership=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getTeams=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getTeam=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.createTeam=t(h);var g=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.updateTeam=t(g);var f=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.deleteTeam=t(f);var v=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getTeamMembers=t(v);var x=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getTeamMember=t(x);var $=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.addTeamMember=t($);var y=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.deleteTeamMember=t(y);var E=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getTeamRepos=t(E);var b=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.getTeamRepo=t(b);var k=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.orgs.addTeamRepo=t(k);var T=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.orgs.deleteTeamRepo=t(T),e}),define("api/statuses",[],function(){var e={statuses:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.statuses.get=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.statuses.create=t(i),e}),define("api/pullRequests",[],function(){var e={pullRequests:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.getAll=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.get=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.create=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.createFromIssue=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.update=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.getCommits=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.getFiles=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.getMerged=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.merge=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.getComments=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.getComment=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.createComment=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.createCommentReply=t(h);var g=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.pullRequests.updateComment=t(g);var f=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.pullRequests.deleteComment=t(f),e}),define("api/repos",[],function(){var e={repos:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getAll=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getFromUser=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getFromOrg=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.create=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.createFromOrg=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.get=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.update=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.delete=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.merge=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])
}),e};e.repos.getContributors=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getLanguages=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getTeams=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getTags=t(h);var g=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getBranches=t(g);var f=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getBranch=t(f);var v=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getCollaborators=t(v);var x=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getCollaborator=t(x);var $=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.addCollaborator=t($);var y=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.removeCollaborator=t(y);var E=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getCommits=t(E);var b=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getCommit=t(b);var k=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getAllCommitComments=t(k);var T=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getCommitComments=t(T);var S=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.createCommitComment=t(S);var q=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getCommitComment=t(q);var w=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.updateCommitComment=t(w);var O=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.compareCommits=t(O);var _=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.deleteCommitComment=t(_);var G=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getReadme=t(G);var P=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getContent=t(P);var R=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getArchiveLink=t(R);var C=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getDownloads=t(C);var D=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getDownload=t(D);var A=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.deleteDownload=t(A);var L=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getForks=t(L);var N=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.fork=t(N);var H=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getKeys=t(H);var U=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getKey=t(U);var M=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.createKey=t(M);var F=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.updateKey=t(F);var I=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.deleteKey=t(I);var j=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getStargazers=t(j);var z=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getStarred=t(z);var J=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getStarredFromUser=t(J);var B=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getStarring=t(B);var Y=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.star=t(Y);var K=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.unStar=t(K);var W=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getWatchers=t(W);var X=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getWatched=t(X);var Z=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getWatchedFromUser=t(Z);var V=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getWatching=t(V);var Q=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.watch=t(Q);var et=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.unWatch=t(et);var tt=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getHooks=t(tt);var at=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.getHook=t(at);var it=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.createHook=t(it);var rt=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.updateHook=t(rt);var nt=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.repos.testHook=t(nt);var ot=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.repos.deleteHook=t(ot),e}),define("api/user",[],function(){var e={user:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getFrom=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.get=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.update=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getOrgs=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getEmails=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.addEmails=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.deleteEmails=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getFollowers=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getFollowingFromUser=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getFollowing=t(d);var p=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getFollowUser=t(p);var c=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.followUser=t(c);var h=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.unFollowUser=t(h);var g=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getKeys=t(g);var f=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.getKey=t(f);var v=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.createKey=t(v);var x=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.user.updateKey=t(x);var $=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.user.deleteKey=t($),e}),define("api/events",[],function(){var e={events:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.get=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getFromRepo=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getFromRepoIssues=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getFromRepoNetwork=t(n);var o=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getFromOrg=t(o);var s=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getReceived=t(s);var l=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getReceivedPublic=t(l);var u=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getFromUser=t(u);var m=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.events.getFromUserPublic=t(m);var d=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.events.getFromUserOrg=t(d),e}),define("api/search",[],function(){var e={search:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.search.issues=t(a);var i=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.search.repos=t(i);var r=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};e.search.users=t(r);var n=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.search.code=t(n),e}),define("api/markdown",[],function(){var e={markdown:{}},t=function(e){return function(t,a,i){var r=this;this.client.httpSend(t,a,function(a,n){if(a)return r.sendError(a,null,t,i);var o;if("undefined"!=typeof n.headers&&"undefined"!=typeof n.headers["content-type"]&&(n.headers["content-type"].indexOf("text/html")>-1||n.headers["content-type"].indexOf("application/vnd.github.v3.raw")>-1))o={data:n.data};else try{o=n.data&&JSON.parse(n.data)}catch(s){return void(i&&i(new Error(s),n))}o=e(o,n),i&&i(null,o)})}},a=function(e,t){return e=e||{},e.meta=e.meta||{},["x-ratelimit-limit","x-ratelimit-remaining","x-oauth-scopes","link","location","last-modified","etag","status"].forEach(function(a){t.headers[a]&&(e.meta[a]=t.headers[a])}),e};return e.markdown.render=t(a),e}),define("api/index",["require","util","api/routes","api/gists","api/gitdata","api/issues","api/authorization","api/orgs","api/statuses","api/pullRequests","api/repos","api/user","api/events","api/search","api/markdown"],function(e,t,a){var i=function(e){this.client=e,this.routes=a},r={sendError:function(e,a,i,r){this.client.debug&&t.log(e,a,i.user,"error"),"string"==typeof e&&t.error(e),r&&r(e)}};return["api/gists","api/gitdata","api/issues","api/authorization","api/orgs","api/statuses","api/pullRequests","api/repos","api/user","api/events","api/search","api/markdown"].forEach(function(a){var i=e(a);t.extend(r,i)}),i.prototype=r,i}),define("githubjs",["util","HttpError","api/index"],function(e,t,a){function i(e){"object"==typeof e&&(e.link||e.meta.link)&&(e=e.link||e.meta.link);var t={next:null,prev:null,first:null,last:null};return"string"!=typeof e?t:(e.replace(/<([^>]*)>;\s*rel="([\w]*)\"/g,function(e,a,i){t[i]=a}),t)}function r(t,a,r,n){var o=i(t)[a];if(o){var s=n.api;n.httpSendForGetPage(new URL(o),function(t,a){if(t)return s.sendError(t,null,o,r);var i;try{i=a.data&&JSON.parse(a.data)}catch(n){return void(r&&e.error(n.message,a))}i||(i={}),i.meta||(i.meta={}),["x-ratelimit-limit","x-ratelimit-remaining","link"].forEach(function(e){a.headers[e]&&(i.meta[e]=a.headers[e])}),r&&r(null,i)})}else e.error("No "+a+" page found")}function n(t,a,i){var r={url:a.url,query:"json"===i?{}:[]};if(!a||!a.params)return r;var n=a.url;return Object.keys(a.params).forEach(function(a){if(a=a.replace(/^[$]+/,""),a in t){var o,s=-1!==n.indexOf(":"+a),l=s||"json"!==i?"query":i;if("json"!==l&&"object"==typeof t[a])try{t[a]=JSON.stringify(t[a]),o=encodeURIComponent(t[a])}catch(u){e.error("httpSend: Error while converting object to JSON: "+(u.message||u))}else o="json"===l?t[a]:encodeURIComponent(t[a]);s?n=n.replace(":"+a,o):"json"===i?r.query[a]=o:r.query.push(a+"="+o)}}),r.url=n,r}var o=function(e){e=e||{},this.config=e,this.debug=e.debug,this.api=new a(this),this.setupRoutes()};return o.prototype.setupRoutes=function(){function t(e){return"string"==typeof e&&(e=e.replace(/^[\s\t\r\n]+/,"").replace(/[\s\t\r\n]+$/,"")),e}function a(a,i){for(var r,n,o,l,u=Object.keys(i),m=0,d=u.length;d>m;m+=1){if(r=u[m],"$"===r.charAt(0)?(r=r.substr(1),s.params[r]?n=s.params[r]:e.error('Invalid variable parameter name substitution; param "'+r+'" not found in defines block')):n=i[r],o=t(a[r]),"boolean"!=typeof o&&!o){if(!n.required)continue;e.error('Empty value for parameter "'+r+'": '+o)}if(n.validation&&(new RegExp(n.validation).test(o)||e.error('Invalid value for parameter "'+r+'": '+o)),n.type)if(l=n.type.toLowerCase(),"number"===l)o=parseInt(o,10),isNaN(o)&&e.error('Invalid value for parameter "'+r+'": '+a[r]+" is NaN");else if("float"===l)o=parseFloat(o),isNaN(o)&&e.error('Invalid value for parameter "'+r+'": '+a[r]+" is NaN");else if("json"===l){if("string"==typeof o)try{o=JSON.parse(o)}catch(p){throw e.error('JSON parse error of value for parameter "'+r+'": '+o),p}}else"date"===l&&(o=new Date(o));a[r]=o}}function i(t,o){o=o||"",Object.keys(t).forEach(function(s){var l=t[s];if(l){var u=o+"/"+s;if(l.url&&l.params){var m=u.replace(/^[\/]+/g,""),d=u.split("/"),p=e.toCamelCase(d[1].toLowerCase());d.splice(0,2);var c=e.toCamelCase(d.join("-"));n[p]||e.error("Unsupported route section, not implemented in version "+r.version+' for route "'+m+'" and block: ',l),n[p][c]||(r.debug&&e.log("Tried to call "+c),e.error("Unsupported route, not implemented in version "+r.version+' for route "'+m+'" and block: ',l)),r[p]||(r[p]={},r[e.toCamelCase("get-"+p+"-api")]=function(){return r[p]}),r[p][c]=function(t,i){try{a(t,l.params)}catch(o){return n.sendError(o,l,t,i),void(r.debug&&e.log(o.message))}n[p][c].call(n,t,l,i)}}else i(l,u)}})}var r=this,n=this.api,o=n.routes,s=o.defines;this.constants=s.constants,this.requestHeaders=s["request-headers"].map(function(e){return e.toLowerCase()}),delete o.defines,i(o),o.defines=s},o.prototype.authenticate=function(t){return t?(t.type&&-1!=="basic|oauth|token".indexOf(t.type)||e.error('Invalid authentication type, must be "basic", "oauth" or "token"'),"basic"!==t.type||t.username&&t.password||e.error("Basic authentication requires both a username and password to be set"),"oauth"!==t.type||t.token||e.error("OAuth2 authentication requires a token to be set"),"token"!==t.type||t.token||e.error("OAuth2 authentication requires a token to be set"),void(this.auth=t)):void(this.auth=!1)},o.prototype.hasNextPage=function(e){return i(e).next?!0:!1},o.prototype.hasPreviousPage=function(e){return i(e).prev?!0:!1},o.prototype.hasLastPage=function(e){return i(e).last?!0:!1},o.prototype.hasFirstPage=function(e){return i(e).first?!0:!1},o.prototype.httpSendForGetPage=function(t,a){var i=this,r=[];r["content-type"]="application/json; charset=utf-8",r.authorization="token "+this.auth.token;var n=!1,o=new XMLHttpRequest;o.open("GET",t,!0),Object.keys(r).forEach(function(e){o.setRequestHeader(e,r[e])}),o.onreadystatechange=function(){if(i.debug&&e.log("STATUS: "+o.status),4===o.readyState)if(o.status>=200&&o.status<300){for(var t={headers:{},data:null},r=o.getAllResponseHeaders().split("\n"),s=0,l=r.length;l>s;s+=1){var u=r[s];if(""!==u&&-1!==u.indexOf(":")){var m=u.indexOf(":"),d=u.substring(0,m).trim().toLowerCase();t.headers[d]=u.substring(m+1).trim()}}t.data=o.responseText,n=!0,a(null,t)}else(!n&&o.status>=400&&o.status<600||o.status<10)&&e.error(o.status,o.responseText)},o.send()},o.prototype.getNextPage=function(e,t){r(e,"next",t,this)},o.prototype.getPreviousPage=function(e,t){r(e,"prev",t,this)},o.prototype.getLastPage=function(e,t){r(e,"last",t,this)},o.prototype.getFirstPage=function(e,t){r(e,"first",t,this)},o.prototype.httpSend=function(a,i,r){var o=this,s=i.method.toLowerCase(),l=-1==="head|get|delete".indexOf(s),u=l&&this.constants.requestFormat?this.constants.requestFormat:"query",m=n(a,i,u),d=m.query,p=this.config.protocol||this.constants.protocol||"http",c=this.config.host||this.constants.host,h=p+"://"+c,g=this.config.url?h+this.config.url+m.url:h+m.url,f=!l&&d.length?g+"?"+d.join("&"):g,v={};if(l&&(d="json"===u?JSON.stringify(d):d.join("&"),v["content-type"]="json"===u?"application/json; charset=utf-8":"application/x-www-form-urlencoded; charset=utf-8"),this.auth)switch(this.auth.type){case"oauth":f+=(-1===f.indexOf("?")?"?":"&")+"access_token="+encodeURIComponent(this.auth.token);break;case"token":v.authorization="token "+this.auth.token}a.headers||(a.headers={}),Object.keys(a.headers).forEach(function(e){var t=e.toLowerCase();v[t]=a.headers[e]}),this.debug&&e.log("REQUEST");var x=new XMLHttpRequest;x.open(s,f,!0),Object.keys(v).forEach(function(e){x.setRequestHeader(e,v[e])}),x.onreadystatechange=function(){if(o.debug&&e.log("STATUS: "+x.status),4===x.readyState)if(x.status>=200&&x.status<300){for(var a={headers:{},data:null},i=x.getAllResponseHeaders().split("\n"),n=0,s=i.length;s>n;n+=1){var l=i[n];if(""!==l&&-1!==l.indexOf(":")){var u=l.indexOf(":"),m=l.substring(0,u).trim().toLowerCase();a.headers[m]=l.substring(u+1).trim()}}a.data=x.responseText,r(null,a)}else(x.status>=400&&x.status<600||x.status<10)&&(e.error(x.status,x.responseText),r(new t(x.responseText,x.status),null))},x.send(l?d:null)},o});